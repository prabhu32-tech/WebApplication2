@model WebApplication2.ViewModel.ProjectAddEditViewModel
@{
    ViewBag.Title = "AddProject";
}

<h2>AddProject</h2>


<form>
    <div class="col-md-6">
        <div class="form-group">
            <label for="custName">Customer Name</label>
            <input type="text" id="custName" class="form-control" />
        </div>

        
        <div class="form-group">
            <label for="txtProjectName">Project Name</label>
            <input type="text" id="txtProjectName" class="form-control" />
        </div>
        <div class="form-group">
            <label for="txtProjectID">Project Id</label>
            <input type="text" id="txtProjectID" class="form-control" />
        </div>

        <div class="form-group">
            <label for="startDate">Start Date</label>
            <input type="date" id="startDate" class="form-control">

        </div>
        <div class="form-group">
            <label>End Date</label>
            <input type="date" id="endDate" class="form-control">

        </div>
        <div class="form-group">
            <label>Project Status</label>
            <select id="ddlProjectStatus" class="form-control">
                
            </select>
        </div>
        <div class="form-group">
            <label>LocationGroup </label>
            <select id="ddlLocationGroup" class="form-control">
            </select>
        </div>
        <div class="form-group">
            <label>State Name </label>
            <input type="text" id="txtStateName" class="form-control">
            
        </div>
        <div class="form-group">
            <label>SalesPerson Name </label>
            <input type="text" id="txtSalesPersonName" class="form-control">
           
        </div>
    </div>
    <div class="form-group">
        <label>Project Category </label>
        <select id="ddlProjectCategory" class="form-control">
        </select>
    </div>
    <div class="form-group">
        <label>Project Type </label>
        <select id="ddlProjectType" class="form-control">
            
        </select>
    </div>
    <div class="form-group">
        <label>Sub Domain </label>
        <select id="ddlSubDomain" class="form-control">
        </select>
    </div>
    <div class="form-group">
        <label>TimeSheet Representative </label>
        <select id="ddlTimeSheetRepresentative" class="form-control">
        </select>
    </div>
    <div class="form-group">
        <label>Timesheet Type </label>
        <select id="ddlTimesheetType" class="form-control">
        </select>
    </div>
    <div class="form-group">
        <label>Practice Type</label>
        <select id="ddlPracticeType" class="form-control">
        </select>
    </div>
    <div class="form-group">
        <label>Recruiter</label>
        <select id="ddlRecruiter" class="form-control">
        </select>
    </div>
    <div class="form-group">
        <label>Invoice Group</label>
        <select id="ddlInvoiceGroup" class="form-control">
        </select>
    </div>
    <div class="form-group">
        <label for="IsVmsTimeSheet">IsVmsTimeSheet</label>
        <input class="check" type="radio" id="isVmsYes" name="IsVmsTimeSheet" value="Yes"><label for="isVmsYes">Yes</label>
        <input class="check" type="radio" id="isVmsNo" name="IsVmsTimeSheet" value="No"><label for="isVmsNo">No</label>       
    </div>

    <input type="button" class="btn-primary" value="Save" id="btnSave" />
</form>

@section scripts{

    <script>
$(document).ready(function(){
    BindProjectStatusList();
    BindLocationGroup();
    BindProjectCategory();
    BindProjectType();
    BindSubDomain();
    BindTimeSheet();
    BindTimeSheetType();
    BindPracticeType();
    BindRecruiter();
    BindInvoiceGroup();

            $("#btnSave").on("click", function () {
                if (IsValidate()) {
                    SaveData();
                }

            });
        });
        function clearMessageJQ(ele) {
            $(ele).siblings('span.error').remove();
        }

        function addErrorMessageJQ(ele, msg) {
            const errorCtrl = $('<span />').addClass('error').html(msg);
            $(ele).closest('div').append(errorCtrl);
        }

        function CustNameValidation() {
            let flag = true;
            const ele = $('#custName');
            clearMessageJQ(ele)
            const custName = $('#custName').val();

            if (custName === "" || custName.length <= 2 || !isNaN(custName.split('')[0])) {
                addErrorMessageJQ(ele, 'Please fill the customer Name');
                console.log(custName);
                flag = false;
            } else {
                flag = true;
            }
            return flag;
        }

        function ProjectNameValidation() {
            let flag = true;
            const ele = $('#txtProjectName');
            clearMessageJQ(ele)
            const prjName = $('#txtProjectName').val();

            if (prjName === "" || prjName.length <= 2 || !isNaN(prjName.split('')[0])) {
                addErrorMessageJQ(ele, 'Please fill the Project Name');
                console.log(prjName);
                flag = false;
            } else {
                flag = true;
            }
            return flag;
        }

        function ProjectIdValidation() {
            let flag = true;
            const ele = $('#txtProjectID');
            clearMessageJQ(ele)
            const prjId = $('#txtProjectID').val();

            if (prjId === "" || prjId.length <= 2 || !isNaN(prjId.split('')[0])) {
                addErrorMessageJQ(ele, 'Please fill the Project Id');
                console.log(prjId);
                flag = false;
            } else {
                flag = true;
            }
            return flag;
        }

        function StartDateValidation() {
            let flag = true;
            const ele = $('#startDate');
            clearMessageJQ(ele)
            const stDate = $('#startDate').val();
            if (stDate == "") {
                addErrorMessageJQ(ele, 'Please fill the Project Start Date');
                flag = false;
            } else { flag = true; }
            return flag;
        }


        function IsValidate() {
        //    let _custName = $("#custName").val();
        //    if (_custName == "") { alert("Please fill the customer Name") }                                             //validations are missing
   
            let flag = true;

            if (!CustNameValidation()) {
                flag = false;
            }
            if (!ProjectNameValidation()) {
                flag = false;
            }
            if (!ProjectIdValidation()) {
                flag = false;
            }
            if (!StartDateValidation()) {
                flag = false;
            }

            return flag;
        }
        function SaveData() {
            let Project = {
                Name: "",
                ProjectName: "",
                ProjectId: "",
                Projectstatus: 0,
                StartDate:"",                
                EndDate:"",
                LocationGroup: "",
                StateName: "",
                SalsePersonName: "",
                ProjectCategory: "",
                ProjectType: "",
                SubDomain: "",
                TimeSheetRepresentative: "",
                TimesheetType: "",
                PracticeType: "",
                Recruiter: "",
                InvoiceGroup: "",
                IsVmsTimeSheet:"",
            };
            Project.Name = $("#custName").val();
            Project.ProjectName = $("#txtProjectName").val();
            Project.ProjectId = $("#txtProjectID").val();
            Project.Projectstatus = $("#ddlProjectStatus :selected").text();
            Project.StartDate = $("#startDate ").val();
            Project.EndDate = $("#endDate ").val();
            Project.LocationGroup = $("#ddlLocationGroup").text();
            Project.StateName = $("#txtStateName").val();
            Project.SalsePersonName = $("#txtSalesPersonName").val();
            Project.ProjectCategory = $("#ddlProjectCategory :selected").text();
            Project.ProjectType = $("#ddlProjectType :selected").text();
            Project.SubDomain = $("#ddlSubDomain :selected").text();
            Project.TimeSheetRepresentative = $("#ddlTimeSheetRepresentative :selected").text();
            Project.TimesheetType = $("#ddlTimesheetType :selected").text();
            Project.PracticeType = $("#ddlPracticeType :selected").text();
            Project.Recruiter = $("#ddlRecruiter :selected").text();
            Project.InvoiceGroup = $("#ddlInvoiceGroup :selected").text();
            Project.IsVmsTimeSheet = $("input[name='IsVmsTimeSheet']:checked").val();
            console.log(Project);
            $.ajax({
                method: "POST",
                url: "/Project/AddProject",
                dataType: "json",
                data: Project,
                success: function () { },
                error: function () {}
            });
        }

        function BindProjectStatusList() {
            $.ajax({
                method: "GET",
                url: "/Project/GetStatusTraining?parentId=1800",
                success: function (data) {
                    //console.log(data);
                   
                    $(data).each(function () {
                        $("#ddlProjectStatus").append($("<option></option>").val(this.keyID).html(this.keyName));
                    });
                },

                error: function () { }
            });
        }
        function BindLocationGroup() {
            $.ajax({
                method: "GET",
                url: "/Project/GetLocationGroup",
                success: function (data) {
                    console.log(data);
                    $(data).each(function () {
                        $("#ddlLocationGroup").append($("<option></option>").val(this.keyID).html(this.keyName));
                    });
                },
                   
                
                error: function () { }
            })

        }
        function BindProjectCategory() {
            $.ajax({
                method: "GET",
                url: "/Project/GetProjectCat",
                success: function (data) {
                    console.log(data);
                    $(data).each(function () {
                        $("#ddlProjectCategory").append($("<option></option>").val(this.keyID).html(this.keyName));
                    });
                    
                },
                error: function () { }
            })

        }
        function BindProjectType() {
            $.ajax({
                method: "GET",
                url: "/Project/GetProjectType",
                success: function (data) {
                    console.log(data);
                    $(data).each(function () {
                        $("#ddlProjectType").append($("<option></option>").val(this.keyID).html(this.keyName));
                    });
                    
                },
                error: function () { }
            })

        }

        function BindSubDomain() {
            $.ajax({
                method: "GET",
                url: "/Project/GetSubDomain",
                success: function (data) {
                    console.log(data);
                    $(data).each(function () {
                        $("#ddlSubDomain").append($("<option></option>").val(this.keyID).html(this.keyName));
                    });

                },
                error: function () { }
            })

        }
        function BindTimeSheet() {
            $.ajax({
                method: "GET",
                url: "/Project/GetTimeSheet",
                success: function (data) {
                    console.log(data);
                    $(data).each(function () {
                        $("#ddlTimeSheetRepresentative").append($("<option></option>").val(this.keyID).html(this.keyName));
                    });
                  
                },
                error: function () { }
            })
        }
        function BindTimeSheetType() {
            $.ajax({
                method: "GET",
                url: "/Project/GetTimeSheetType",
                success: function (data) {
                    console.log(data);

                    $(data).each(function () {
                        $("#ddlTimesheetType").append($("<option></option>").val(this.keyID).html(this.keyName));
                    });
                },
                error: function () { }
            })
        }
        function BindPracticeType() {
            $.ajax({
                method: "GET",
                url: "/Project/GetPracticeType",
                success: function (data) {
                    console.log(data);

                    $(data).each(function () {
                        $("#ddlPracticeType").append($("<option></option>").val(this.keyID).html(this.keyName));
                    });
                },
                error: function () { }
            })
        }
        function BindRecruiter() {
            $.ajax({
                method: "GET",
                url: "/Project/GetRecruiter",
                success: function (data) {
                    console.log(data);

                    $(data).each(function () {
                        $("#ddlRecruiter").append($("<option></option>").val(this.keyID).html(this.keyName));
                    });
                },
                error: function () { }
            })
        }
        function BindInvoiceGroup() {
            $.ajax({
                method: "GET",
                url: "/Project/GetInvoiceGroup",
                success: function (data) {
                    console.log(data);

                    $(data).each(function () {
                        $("#ddlInvoiceGroup").append($("<option></option>").val(this.keyID).html(this.keyName));
                    });
                },
                error: function () { }
            })
        }

    </script>
}