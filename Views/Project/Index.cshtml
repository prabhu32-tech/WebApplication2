@model WebApplication2.ViewModel.ProjectAddEditViewModel
@{
    ViewBag.Title = "Index";
}
@using (Html.BeginForm("", "Project/Index", FormMethod.Post, htmlAttributes: new { @class = "form-control" }))
{
    <h3>Project Details</h3>

    <div class="form-group">
        @Html.LabelFor(m => m.Project.Customer_Name)
        @Html.TextBoxFor(m => m.Project.Customer_Name)
        @Html.TextBoxFor(m => m.Project.Customer_Name)
        @Html.ValidationMessageFor(m => m.Project.Customer_Name, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Project.Project_Name)
        @Html.TextBoxFor(m => m.Project.Project_Name, new { @class = "form-control" })
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Project.Project_Id)
        @Html.TextBoxFor(m => m.Project.Project_Id, new { @class = "form-control" })
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Project.ProjectStartDate)
        @Html.EditorFor(m => m.Project.ProjectStartDate, "{DD/MM/YYYY}", new { @class = "form-control" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Project.ProjectEndDate)
        @Html.EditorFor(m => m.Project.ProjectEndDate, "{DD/MM/YYYY}", new { @class = "form-control" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Project.Project_Status)
        @Html.DropDownListFor(m => m.Project.Project_Status, new SelectList(Model.Status, "KeyID", "KeyName"), "Select Status", new { @class = "form-control" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Project.LocationGroup)
        @Html.DropDownListFor(m => m.Project.LocationGroup, new SelectList(Model.LocGroup, "KeyID", "KeyName"), "Select Location Group", new { @class = "form-control" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Project.ProjectCategory)
        @Html.DropDownListFor(m => m.Project.ProjectCategory, new SelectList(Model.ProjCat, "KeyID", "KeyName"), "Select Project Category", new { @class = "form-control" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Project.Project_Type)
        @Html.DropDownListFor(m => m.Project.Project_Type, new SelectList(Model.ProjType, "KeyID", "KeyName"), new { @class = "form-control" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Project.Sub_Domain)
        @Html.DropDownListFor(m => m.Project.Sub_Domain, new SelectList(Model.SubDomain, "KeyID", "KeyName"), "Select Sub Domain", new { @class = "form-control" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Project.TimeSheetRepresentative)
        @Html.DropDownListFor(m => m.Project.TimeSheetRepresentative, new SelectList(Model.TimeSheet, "KeyID", "KeyName"), "Select timeSheet Representative", new { @class = "form-control" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Project.TimesheetType)
        @Html.DropDownListFor(m => m.Project.TimesheetType, new SelectList(Model.TimeSheetType, "KeyID", "KeyName"), "Select TimeSheet Type", new { @class = "form-control" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Project.PracticeType)
        @Html.DropDownListFor(m => m.Project.PracticeType, new SelectList(Model.PracType, "KeyID", "KeyName"), "Select Practice Type", new { @class = "form-control" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Project.Recruiter)
        @Html.DropDownListFor(m => m.Project.Recruiter, new SelectList(Model.Recruiter, "KeyID", "KeyName"), "Select Recruiter", new { @class = "form-control" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Project.InvoiceGroup)
        @Html.DropDownListFor(m => m.Project.InvoiceGroup, new SelectList(Model.InvoiceGP, "KeyID", "KeyName"), "Select Invoice Group", new { @class = "form-control" })
    </div>

    <button type="submit" class="btn btn-primary">Save</button>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/custom-validator")
}
